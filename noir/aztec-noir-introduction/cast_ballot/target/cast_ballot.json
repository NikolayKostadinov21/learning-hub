{"noir_version":"0.30.0+af57471035e4fa7eaffa71693219df6d029dbcde","hash":17787115638004712820,"abi":{"parameters":[{"name":"token_budget","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"},{"name":"votes","type":{"kind":"array","length":10,"type":{"kind":"integer","sign":"unsigned","width":32}},"visibility":"private"}],"param_witnesses":{"token_budget":[{"start":0,"end":1}],"votes":[{"start":1,"end":11}]},"return_type":null,"return_witnesses":[],"error_types":{}},"bytecode":"H4sIAAAAAAAA/9WZXW/aMBSGk/BRvkqBppTSFFw0TdM0TTFJSnK3v7HLIMyKBqRqw6r9+8Wa0xmT3XjnRJolsE8Un9c85yU4xDR+t2n2CsTYzF4VMSZSbCqxpcQVJa4qcU2J60p8psQNJW4qcUvE+Zp5+yJ6998aNUVONa/nPvg+W8wZ9WjszqNlGLh+sHwIaUiDMFjNQ89joR8uomW0cCPqe4yug8hbi8RtuDW6OYc2IgdL1BmaQweBQ0fikLcKMA/A+tEOIM9zBJ7niL7KrxfQvuoicOiW4CvA+tEuIM8LBJ4XiL7ivzlVBF/1EDj0SvAVYP1oD5BnH4FnH9FXfO9SQ/DVAIHDoARfAdaPDgB5XiLwvET0Fd8D1xF8ZSNwsEvwFWD9qA3I8wqB5xWir/i91BmCr4YIHIYl+AqwfnQIyPMagec1oq/4PXkDwVcjBA6jEnwFWD86AuR5g8DzBtFX/L+dJoKvxggcxiX4CrB+dAzI8xaB5y2ir/h/hC0EXzkIHJwSfAVYP+oA8rxD4HkneNZEXss4bRYwX0iPATCh+aDgo4PllrlORM+fJ5jAgm/CeYGnxukXpvqfFFQz11zkohPAdU2RjAZ90Z0YsB7KvdKS1msZfx5e8QsHvznnN1J809s0jn9M5GZL4440vhd9nKZs95SSNCG7wzbdPG1/ktdN+kiSH+x5vU1e+Uld3Yk9aaJzOjFerU7nDHTFbA2xoa7YSENsrCvmaIhNdMWIhthMV+ydhth7XbEPGmIfdcU+aYh91hVzNcR8ac5C9F+TA4mfGRFzN/tvfPrhhZFdkh1Ok+9s/0LSx3ifvWWnbbNcbHX/duVpiL4u5Va3N0XbnZlx/DjXlI6b0pyKcew1+XxTyj+T5hSdY/4lT7tgnf2CY78AU2oLKZ8gAAA=","debug_symbols":"tZfLasMwEEX/ZdZeWJqx/PiVUoqSOMVg5BA7hWL675XbtLTJMpydRrqcxYXhoFUO/e7y+jKk4zRL97TKOO3jMkwpT6s493U3n2LaxnmJ50W6EEIhfTpIV5fho5DjMPbSWT7eRbVtr1Fz5d/ocyHOk3Al4UbCq0fhjf7C3S08kPCarKUh4S1Yiy9JOLmhntxQr2QtRsIrspZAwmuyloaEt2AtWpJwB9ainoSTDlXSoUo6VEmHKulQJR2qpEONdKiRDjXSoUY61EiHGulQIx1qpEONdKg9uqFWN9do9T+a4VVJwh0J9xg8D2/xPMTd2G//6e3tkvY/3+s8Lu+n75ec/QQ=","file_map":{"46":{"source":"global CANDIDATE_COUNT = 10;\n\n// Constrains votes to obey quadratic votes cost function\nfn check_within_budget(votes: [u32; CANDIDATE_COUNT], token_budget: u32) {\n\t// Sum squared votes into this variable\n\tlet mut tokens_spent: u32 = 0;\n\t// Loop over the vote for each candidate\n\tfor i in 0..CANDIDATE_COUNT {\n\t\tlet vote = votes[i];\n\t\t// Accumulate each squared vote\n\t\ttokens_spent = tokens_spent + (vote * vote);\n\t};\n\n\t// Check we haven't used more tokens than allowed\n\tassert (tokens_spent <= token_budget, \"You are attempting to use more tokens than the allowed!\");\n}\n\nfn main(\n\ttoken_budget: pub u32,\n\tvotes: [u32; CANDIDATE_COUNT],\n) {\n    \t// Enforce QV rules\n\tcheck_within_budget(votes, token_budget);\n}\n\n#[test]\nfn test_main() {\n    // main(1, 2);\n\n    // Uncomment to make test fail\n    // main(1, 1);\n}\n","path":"/root/learning/learning-hub/noir/aztec-noir-introduction/2.1-cast_ballot/src/main.nr"}},"names":["main"]}